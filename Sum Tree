class Solution
{
    private:
    pair<bool, int> isSum(Node* root){
        if(root == NULL){
            pair<bool, int> p(true, 0);
            return p;
        }

        if(root->left == NULL && root->right == NULL){
            pair<bool, int> p(true,root->data);
            return p;
        }

        pair<bool, int> left = isSum(root->left);
        pair<bool, int> right = isSum(root->right);

        bool sum = left.second + right.second == root->data;

        pair<bool, int> ans;
        ans.second = left.second + right.second + root->data;

        if(left.first && right.first && sum){
            ans.first = true;
        }else{
            ans.first = false;
        }

        return ans;

    }
    public:
    bool isSumTree(Node* root)
    {
         // Your code here
         return isSum(root).first;
    }
};
