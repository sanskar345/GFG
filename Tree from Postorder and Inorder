Node* solve(int in[], int post[], int &index, int inorderStart, int inorderEnd, int n, map<int,int> &map){
    if(index < 0 || inorderStart > inorderEnd){
        return NULL;
    }

    int element = post[index--];
    Node* root = new Node(element);
    int pos = map[element];

    root->right = solve(in, post, index, pos+1, inorderEnd, n, map);
    root->left = solve(in, post, index, inorderStart, pos-1, n, map);

    return root;
}

Node *buildTree(int in[], int post[], int n) {
    // Your code here

    map<int, int> map;

    for(int i=0; i<n; i++){
        map[in[i]] = i;
    }

    int postOrderStart = n-1;

    return solve(in, post, postOrderStart, 0, n-1, n, map);
}
