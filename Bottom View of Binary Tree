class Solution {
  public:
    vector <int> bottomView(Node *root) {
        // Your Code Here
                vector<int> ans;

        if(root == NULL){
            return ans;
        }

        map<int, int> map;

        queue<pair<Node*, int>> q;

        q.push(make_pair(root, 0));

        while(!q.empty()){
            pair<Node*, int> temp = q.front();
            q.pop();

            Node* curr = temp.first;
            int hd = temp.second;


            map[hd] = curr->data;


            if(curr->left){
                q.push(make_pair(curr->left, hd-1));
            }
            if(curr->right){
                q.push(make_pair(curr->right, hd+1));
            }

        }

        for(auto i: map){
            ans.push_back(i.second);
        }

        return ans;
    }

};
