class Solution{
    Node* solve(int in[],int pre[], int &index, int inorderStart, int inorderEnd, int n, map<int,int> &map){
        if(index >= n || inorderStart > inorderEnd){
            return NULL;
        }
        int data = pre[index++];
        Node* root = new Node(data);

        int pos = map[data];

        root->left = solve(in, pre, index, inorderStart, pos-1, n, map);
        root->right = solve(in, pre, index, pos+1, inorderEnd, n, map);

        return root;
    }
    public:
    Node* buildTree(int in[],int pre[], int n)
    {
        // Code here

        map<int, int> map;
        for(int i=0; i<n; i++){
            map[in[i]] = i;
        }

        int preOrderIndex = 0;

        return solve(in, pre, preOrderIndex, 0, n-1, n, map);
    }
};
